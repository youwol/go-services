// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/docdb/models"
)

// DeleteDocumentOKCode is the HTTP code returned for type DeleteDocumentOK
const DeleteDocumentOKCode int = 200

/*DeleteDocumentOK Ok

swagger:response deleteDocumentOK
*/
type DeleteDocumentOK struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteDocumentOK creates DeleteDocumentOK with default headers values
func NewDeleteDocumentOK() *DeleteDocumentOK {

	return &DeleteDocumentOK{}
}

// WithPayload adds the payload to the delete document o k response
func (o *DeleteDocumentOK) WithPayload(payload *models.APIResponse) *DeleteDocumentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete document o k response
func (o *DeleteDocumentOK) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDocumentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDocumentBadRequestCode is the HTTP code returned for type DeleteDocumentBadRequest
const DeleteDocumentBadRequestCode int = 400

/*DeleteDocumentBadRequest Bad request

swagger:response deleteDocumentBadRequest
*/
type DeleteDocumentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteDocumentBadRequest creates DeleteDocumentBadRequest with default headers values
func NewDeleteDocumentBadRequest() *DeleteDocumentBadRequest {

	return &DeleteDocumentBadRequest{}
}

// WithPayload adds the payload to the delete document bad request response
func (o *DeleteDocumentBadRequest) WithPayload(payload *models.APIResponse) *DeleteDocumentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete document bad request response
func (o *DeleteDocumentBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDocumentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDocumentUnauthorizedCode is the HTTP code returned for type DeleteDocumentUnauthorized
const DeleteDocumentUnauthorizedCode int = 401

/*DeleteDocumentUnauthorized Unauthorized

swagger:response deleteDocumentUnauthorized
*/
type DeleteDocumentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteDocumentUnauthorized creates DeleteDocumentUnauthorized with default headers values
func NewDeleteDocumentUnauthorized() *DeleteDocumentUnauthorized {

	return &DeleteDocumentUnauthorized{}
}

// WithPayload adds the payload to the delete document unauthorized response
func (o *DeleteDocumentUnauthorized) WithPayload(payload *models.APIResponse) *DeleteDocumentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete document unauthorized response
func (o *DeleteDocumentUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDocumentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDocumentNotFoundCode is the HTTP code returned for type DeleteDocumentNotFound
const DeleteDocumentNotFoundCode int = 404

/*DeleteDocumentNotFound Not found

swagger:response deleteDocumentNotFound
*/
type DeleteDocumentNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteDocumentNotFound creates DeleteDocumentNotFound with default headers values
func NewDeleteDocumentNotFound() *DeleteDocumentNotFound {

	return &DeleteDocumentNotFound{}
}

// WithPayload adds the payload to the delete document not found response
func (o *DeleteDocumentNotFound) WithPayload(payload *models.APIResponse) *DeleteDocumentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete document not found response
func (o *DeleteDocumentNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDocumentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDocumentInternalServerErrorCode is the HTTP code returned for type DeleteDocumentInternalServerError
const DeleteDocumentInternalServerErrorCode int = 500

/*DeleteDocumentInternalServerError Internal error

swagger:response deleteDocumentInternalServerError
*/
type DeleteDocumentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteDocumentInternalServerError creates DeleteDocumentInternalServerError with default headers values
func NewDeleteDocumentInternalServerError() *DeleteDocumentInternalServerError {

	return &DeleteDocumentInternalServerError{}
}

// WithPayload adds the payload to the delete document internal server error response
func (o *DeleteDocumentInternalServerError) WithPayload(payload *models.APIResponse) *DeleteDocumentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete document internal server error response
func (o *DeleteDocumentInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDocumentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
