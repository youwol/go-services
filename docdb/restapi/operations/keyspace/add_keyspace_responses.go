// Code generated by go-swagger; DO NOT EDIT.

package keyspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/docdb/models"
)

// AddKeyspaceCreatedCode is the HTTP code returned for type AddKeyspaceCreated
const AddKeyspaceCreatedCode int = 201

/*AddKeyspaceCreated Created

swagger:response addKeyspaceCreated
*/
type AddKeyspaceCreated struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddKeyspaceCreated creates AddKeyspaceCreated with default headers values
func NewAddKeyspaceCreated() *AddKeyspaceCreated {

	return &AddKeyspaceCreated{}
}

// WithPayload adds the payload to the add keyspace created response
func (o *AddKeyspaceCreated) WithPayload(payload *models.APIResponse) *AddKeyspaceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add keyspace created response
func (o *AddKeyspaceCreated) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddKeyspaceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddKeyspaceBadRequestCode is the HTTP code returned for type AddKeyspaceBadRequest
const AddKeyspaceBadRequestCode int = 400

/*AddKeyspaceBadRequest Bad request

swagger:response addKeyspaceBadRequest
*/
type AddKeyspaceBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddKeyspaceBadRequest creates AddKeyspaceBadRequest with default headers values
func NewAddKeyspaceBadRequest() *AddKeyspaceBadRequest {

	return &AddKeyspaceBadRequest{}
}

// WithPayload adds the payload to the add keyspace bad request response
func (o *AddKeyspaceBadRequest) WithPayload(payload *models.APIResponse) *AddKeyspaceBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add keyspace bad request response
func (o *AddKeyspaceBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddKeyspaceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddKeyspaceUnauthorizedCode is the HTTP code returned for type AddKeyspaceUnauthorized
const AddKeyspaceUnauthorizedCode int = 401

/*AddKeyspaceUnauthorized Unauthorized

swagger:response addKeyspaceUnauthorized
*/
type AddKeyspaceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddKeyspaceUnauthorized creates AddKeyspaceUnauthorized with default headers values
func NewAddKeyspaceUnauthorized() *AddKeyspaceUnauthorized {

	return &AddKeyspaceUnauthorized{}
}

// WithPayload adds the payload to the add keyspace unauthorized response
func (o *AddKeyspaceUnauthorized) WithPayload(payload *models.APIResponse) *AddKeyspaceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add keyspace unauthorized response
func (o *AddKeyspaceUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddKeyspaceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddKeyspaceInternalServerErrorCode is the HTTP code returned for type AddKeyspaceInternalServerError
const AddKeyspaceInternalServerErrorCode int = 500

/*AddKeyspaceInternalServerError Internal error

swagger:response addKeyspaceInternalServerError
*/
type AddKeyspaceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddKeyspaceInternalServerError creates AddKeyspaceInternalServerError with default headers values
func NewAddKeyspaceInternalServerError() *AddKeyspaceInternalServerError {

	return &AddKeyspaceInternalServerError{}
}

// WithPayload adds the payload to the add keyspace internal server error response
func (o *AddKeyspaceInternalServerError) WithPayload(payload *models.APIResponse) *AddKeyspaceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add keyspace internal server error response
func (o *AddKeyspaceInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddKeyspaceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
