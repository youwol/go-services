// Code generated by go-swagger; DO NOT EDIT.

package keyspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/docdb/models"
)

// GetKeyspacesOKCode is the HTTP code returned for type GetKeyspacesOK
const GetKeyspacesOKCode int = 200

/*GetKeyspacesOK Ok

swagger:response getKeyspacesOK
*/
type GetKeyspacesOK struct {

	/*
	  In: Body
	*/
	Payload models.KeyspaceList `json:"body,omitempty"`
}

// NewGetKeyspacesOK creates GetKeyspacesOK with default headers values
func NewGetKeyspacesOK() *GetKeyspacesOK {

	return &GetKeyspacesOK{}
}

// WithPayload adds the payload to the get keyspaces o k response
func (o *GetKeyspacesOK) WithPayload(payload models.KeyspaceList) *GetKeyspacesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keyspaces o k response
func (o *GetKeyspacesOK) SetPayload(payload models.KeyspaceList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeyspacesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.KeyspaceList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetKeyspacesBadRequestCode is the HTTP code returned for type GetKeyspacesBadRequest
const GetKeyspacesBadRequestCode int = 400

/*GetKeyspacesBadRequest Bad request

swagger:response getKeyspacesBadRequest
*/
type GetKeyspacesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetKeyspacesBadRequest creates GetKeyspacesBadRequest with default headers values
func NewGetKeyspacesBadRequest() *GetKeyspacesBadRequest {

	return &GetKeyspacesBadRequest{}
}

// WithPayload adds the payload to the get keyspaces bad request response
func (o *GetKeyspacesBadRequest) WithPayload(payload *models.APIResponse) *GetKeyspacesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keyspaces bad request response
func (o *GetKeyspacesBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeyspacesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetKeyspacesUnauthorizedCode is the HTTP code returned for type GetKeyspacesUnauthorized
const GetKeyspacesUnauthorizedCode int = 401

/*GetKeyspacesUnauthorized Unauthorized

swagger:response getKeyspacesUnauthorized
*/
type GetKeyspacesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetKeyspacesUnauthorized creates GetKeyspacesUnauthorized with default headers values
func NewGetKeyspacesUnauthorized() *GetKeyspacesUnauthorized {

	return &GetKeyspacesUnauthorized{}
}

// WithPayload adds the payload to the get keyspaces unauthorized response
func (o *GetKeyspacesUnauthorized) WithPayload(payload *models.APIResponse) *GetKeyspacesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keyspaces unauthorized response
func (o *GetKeyspacesUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeyspacesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetKeyspacesNotFoundCode is the HTTP code returned for type GetKeyspacesNotFound
const GetKeyspacesNotFoundCode int = 404

/*GetKeyspacesNotFound Not found

swagger:response getKeyspacesNotFound
*/
type GetKeyspacesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetKeyspacesNotFound creates GetKeyspacesNotFound with default headers values
func NewGetKeyspacesNotFound() *GetKeyspacesNotFound {

	return &GetKeyspacesNotFound{}
}

// WithPayload adds the payload to the get keyspaces not found response
func (o *GetKeyspacesNotFound) WithPayload(payload *models.APIResponse) *GetKeyspacesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keyspaces not found response
func (o *GetKeyspacesNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeyspacesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetKeyspacesInternalServerErrorCode is the HTTP code returned for type GetKeyspacesInternalServerError
const GetKeyspacesInternalServerErrorCode int = 500

/*GetKeyspacesInternalServerError Internal error

swagger:response getKeyspacesInternalServerError
*/
type GetKeyspacesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetKeyspacesInternalServerError creates GetKeyspacesInternalServerError with default headers values
func NewGetKeyspacesInternalServerError() *GetKeyspacesInternalServerError {

	return &GetKeyspacesInternalServerError{}
}

// WithPayload adds the payload to the get keyspaces internal server error response
func (o *GetKeyspacesInternalServerError) WithPayload(payload *models.APIResponse) *GetKeyspacesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keyspaces internal server error response
func (o *GetKeyspacesInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeyspacesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
