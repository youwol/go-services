// Code generated by go-swagger; DO NOT EDIT.

package table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/docdb/models"
)

// AddTableCreatedCode is the HTTP code returned for type AddTableCreated
const AddTableCreatedCode int = 201

/*AddTableCreated Created

swagger:response addTableCreated
*/
type AddTableCreated struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddTableCreated creates AddTableCreated with default headers values
func NewAddTableCreated() *AddTableCreated {

	return &AddTableCreated{}
}

// WithPayload adds the payload to the add table created response
func (o *AddTableCreated) WithPayload(payload *models.APIResponse) *AddTableCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add table created response
func (o *AddTableCreated) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTableCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTableBadRequestCode is the HTTP code returned for type AddTableBadRequest
const AddTableBadRequestCode int = 400

/*AddTableBadRequest Bad request

swagger:response addTableBadRequest
*/
type AddTableBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddTableBadRequest creates AddTableBadRequest with default headers values
func NewAddTableBadRequest() *AddTableBadRequest {

	return &AddTableBadRequest{}
}

// WithPayload adds the payload to the add table bad request response
func (o *AddTableBadRequest) WithPayload(payload *models.APIResponse) *AddTableBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add table bad request response
func (o *AddTableBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTableBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTableUnauthorizedCode is the HTTP code returned for type AddTableUnauthorized
const AddTableUnauthorizedCode int = 401

/*AddTableUnauthorized Unauthorized

swagger:response addTableUnauthorized
*/
type AddTableUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddTableUnauthorized creates AddTableUnauthorized with default headers values
func NewAddTableUnauthorized() *AddTableUnauthorized {

	return &AddTableUnauthorized{}
}

// WithPayload adds the payload to the add table unauthorized response
func (o *AddTableUnauthorized) WithPayload(payload *models.APIResponse) *AddTableUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add table unauthorized response
func (o *AddTableUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTableUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTableNotFoundCode is the HTTP code returned for type AddTableNotFound
const AddTableNotFoundCode int = 404

/*AddTableNotFound Not found

swagger:response addTableNotFound
*/
type AddTableNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddTableNotFound creates AddTableNotFound with default headers values
func NewAddTableNotFound() *AddTableNotFound {

	return &AddTableNotFound{}
}

// WithPayload adds the payload to the add table not found response
func (o *AddTableNotFound) WithPayload(payload *models.APIResponse) *AddTableNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add table not found response
func (o *AddTableNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTableNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTableInternalServerErrorCode is the HTTP code returned for type AddTableInternalServerError
const AddTableInternalServerErrorCode int = 500

/*AddTableInternalServerError Internal error

swagger:response addTableInternalServerError
*/
type AddTableInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddTableInternalServerError creates AddTableInternalServerError with default headers values
func NewAddTableInternalServerError() *AddTableInternalServerError {

	return &AddTableInternalServerError{}
}

// WithPayload adds the payload to the add table internal server error response
func (o *AddTableInternalServerError) WithPayload(payload *models.APIResponse) *AddTableInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add table internal server error response
func (o *AddTableInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTableInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
