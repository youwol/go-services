// Code generated by go-swagger; DO NOT EDIT.

package table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/docdb/models"
)

// GetTableOKCode is the HTTP code returned for type GetTableOK
const GetTableOKCode int = 200

/*GetTableOK Ok

swagger:response getTableOK
*/
type GetTableOK struct {

	/*
	  In: Body
	*/
	Payload *models.Table `json:"body,omitempty"`
}

// NewGetTableOK creates GetTableOK with default headers values
func NewGetTableOK() *GetTableOK {

	return &GetTableOK{}
}

// WithPayload adds the payload to the get table o k response
func (o *GetTableOK) WithPayload(payload *models.Table) *GetTableOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get table o k response
func (o *GetTableOK) SetPayload(payload *models.Table) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTableOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTableBadRequestCode is the HTTP code returned for type GetTableBadRequest
const GetTableBadRequestCode int = 400

/*GetTableBadRequest Bad request

swagger:response getTableBadRequest
*/
type GetTableBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTableBadRequest creates GetTableBadRequest with default headers values
func NewGetTableBadRequest() *GetTableBadRequest {

	return &GetTableBadRequest{}
}

// WithPayload adds the payload to the get table bad request response
func (o *GetTableBadRequest) WithPayload(payload *models.APIResponse) *GetTableBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get table bad request response
func (o *GetTableBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTableBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTableUnauthorizedCode is the HTTP code returned for type GetTableUnauthorized
const GetTableUnauthorizedCode int = 401

/*GetTableUnauthorized Unauthorized

swagger:response getTableUnauthorized
*/
type GetTableUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTableUnauthorized creates GetTableUnauthorized with default headers values
func NewGetTableUnauthorized() *GetTableUnauthorized {

	return &GetTableUnauthorized{}
}

// WithPayload adds the payload to the get table unauthorized response
func (o *GetTableUnauthorized) WithPayload(payload *models.APIResponse) *GetTableUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get table unauthorized response
func (o *GetTableUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTableUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTableNotFoundCode is the HTTP code returned for type GetTableNotFound
const GetTableNotFoundCode int = 404

/*GetTableNotFound Not found

swagger:response getTableNotFound
*/
type GetTableNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTableNotFound creates GetTableNotFound with default headers values
func NewGetTableNotFound() *GetTableNotFound {

	return &GetTableNotFound{}
}

// WithPayload adds the payload to the get table not found response
func (o *GetTableNotFound) WithPayload(payload *models.APIResponse) *GetTableNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get table not found response
func (o *GetTableNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTableNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTableInternalServerErrorCode is the HTTP code returned for type GetTableInternalServerError
const GetTableInternalServerErrorCode int = 500

/*GetTableInternalServerError Internal error

swagger:response getTableInternalServerError
*/
type GetTableInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetTableInternalServerError creates GetTableInternalServerError with default headers values
func NewGetTableInternalServerError() *GetTableInternalServerError {

	return &GetTableInternalServerError{}
}

// WithPayload adds the payload to the get table internal server error response
func (o *GetTableInternalServerError) WithPayload(payload *models.APIResponse) *GetTableInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get table internal server error response
func (o *GetTableInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTableInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
