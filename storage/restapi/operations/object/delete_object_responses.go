// Code generated by go-swagger; DO NOT EDIT.

package object

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/storage/models"
)

// DeleteObjectOKCode is the HTTP code returned for type DeleteObjectOK
const DeleteObjectOKCode int = 200

/*DeleteObjectOK Ok

swagger:response deleteObjectOK
*/
type DeleteObjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteObjectOK creates DeleteObjectOK with default headers values
func NewDeleteObjectOK() *DeleteObjectOK {

	return &DeleteObjectOK{}
}

// WithPayload adds the payload to the delete object o k response
func (o *DeleteObjectOK) WithPayload(payload *models.APIResponse) *DeleteObjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete object o k response
func (o *DeleteObjectOK) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteObjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteObjectBadRequestCode is the HTTP code returned for type DeleteObjectBadRequest
const DeleteObjectBadRequestCode int = 400

/*DeleteObjectBadRequest Bad request

swagger:response deleteObjectBadRequest
*/
type DeleteObjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteObjectBadRequest creates DeleteObjectBadRequest with default headers values
func NewDeleteObjectBadRequest() *DeleteObjectBadRequest {

	return &DeleteObjectBadRequest{}
}

// WithPayload adds the payload to the delete object bad request response
func (o *DeleteObjectBadRequest) WithPayload(payload *models.APIResponse) *DeleteObjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete object bad request response
func (o *DeleteObjectBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteObjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteObjectUnauthorizedCode is the HTTP code returned for type DeleteObjectUnauthorized
const DeleteObjectUnauthorizedCode int = 401

/*DeleteObjectUnauthorized Unauthorized

swagger:response deleteObjectUnauthorized
*/
type DeleteObjectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteObjectUnauthorized creates DeleteObjectUnauthorized with default headers values
func NewDeleteObjectUnauthorized() *DeleteObjectUnauthorized {

	return &DeleteObjectUnauthorized{}
}

// WithPayload adds the payload to the delete object unauthorized response
func (o *DeleteObjectUnauthorized) WithPayload(payload *models.APIResponse) *DeleteObjectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete object unauthorized response
func (o *DeleteObjectUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteObjectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteObjectNotFoundCode is the HTTP code returned for type DeleteObjectNotFound
const DeleteObjectNotFoundCode int = 404

/*DeleteObjectNotFound Not found

swagger:response deleteObjectNotFound
*/
type DeleteObjectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteObjectNotFound creates DeleteObjectNotFound with default headers values
func NewDeleteObjectNotFound() *DeleteObjectNotFound {

	return &DeleteObjectNotFound{}
}

// WithPayload adds the payload to the delete object not found response
func (o *DeleteObjectNotFound) WithPayload(payload *models.APIResponse) *DeleteObjectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete object not found response
func (o *DeleteObjectNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteObjectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteObjectInternalServerErrorCode is the HTTP code returned for type DeleteObjectInternalServerError
const DeleteObjectInternalServerErrorCode int = 500

/*DeleteObjectInternalServerError Internal error

swagger:response deleteObjectInternalServerError
*/
type DeleteObjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteObjectInternalServerError creates DeleteObjectInternalServerError with default headers values
func NewDeleteObjectInternalServerError() *DeleteObjectInternalServerError {

	return &DeleteObjectInternalServerError{}
}

// WithPayload adds the payload to the delete object internal server error response
func (o *DeleteObjectInternalServerError) WithPayload(payload *models.APIResponse) *DeleteObjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete object internal server error response
func (o *DeleteObjectInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteObjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
