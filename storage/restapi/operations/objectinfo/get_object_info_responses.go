// Code generated by go-swagger; DO NOT EDIT.

package objectinfo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"platform/services/storage/models"
)

// GetObjectInfoOKCode is the HTTP code returned for type GetObjectInfoOK
const GetObjectInfoOKCode int = 200

/*GetObjectInfoOK Ok

swagger:response getObjectInfoOK
*/
type GetObjectInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.ObjectInfo `json:"body,omitempty"`
}

// NewGetObjectInfoOK creates GetObjectInfoOK with default headers values
func NewGetObjectInfoOK() *GetObjectInfoOK {

	return &GetObjectInfoOK{}
}

// WithPayload adds the payload to the get object info o k response
func (o *GetObjectInfoOK) WithPayload(payload *models.ObjectInfo) *GetObjectInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get object info o k response
func (o *GetObjectInfoOK) SetPayload(payload *models.ObjectInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetObjectInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetObjectInfoBadRequestCode is the HTTP code returned for type GetObjectInfoBadRequest
const GetObjectInfoBadRequestCode int = 400

/*GetObjectInfoBadRequest Bad request

swagger:response getObjectInfoBadRequest
*/
type GetObjectInfoBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetObjectInfoBadRequest creates GetObjectInfoBadRequest with default headers values
func NewGetObjectInfoBadRequest() *GetObjectInfoBadRequest {

	return &GetObjectInfoBadRequest{}
}

// WithPayload adds the payload to the get object info bad request response
func (o *GetObjectInfoBadRequest) WithPayload(payload *models.APIResponse) *GetObjectInfoBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get object info bad request response
func (o *GetObjectInfoBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetObjectInfoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetObjectInfoUnauthorizedCode is the HTTP code returned for type GetObjectInfoUnauthorized
const GetObjectInfoUnauthorizedCode int = 401

/*GetObjectInfoUnauthorized Unauthorized

swagger:response getObjectInfoUnauthorized
*/
type GetObjectInfoUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetObjectInfoUnauthorized creates GetObjectInfoUnauthorized with default headers values
func NewGetObjectInfoUnauthorized() *GetObjectInfoUnauthorized {

	return &GetObjectInfoUnauthorized{}
}

// WithPayload adds the payload to the get object info unauthorized response
func (o *GetObjectInfoUnauthorized) WithPayload(payload *models.APIResponse) *GetObjectInfoUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get object info unauthorized response
func (o *GetObjectInfoUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetObjectInfoUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetObjectInfoNotFoundCode is the HTTP code returned for type GetObjectInfoNotFound
const GetObjectInfoNotFoundCode int = 404

/*GetObjectInfoNotFound Not found

swagger:response getObjectInfoNotFound
*/
type GetObjectInfoNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetObjectInfoNotFound creates GetObjectInfoNotFound with default headers values
func NewGetObjectInfoNotFound() *GetObjectInfoNotFound {

	return &GetObjectInfoNotFound{}
}

// WithPayload adds the payload to the get object info not found response
func (o *GetObjectInfoNotFound) WithPayload(payload *models.APIResponse) *GetObjectInfoNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get object info not found response
func (o *GetObjectInfoNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetObjectInfoNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetObjectInfoInternalServerErrorCode is the HTTP code returned for type GetObjectInfoInternalServerError
const GetObjectInfoInternalServerErrorCode int = 500

/*GetObjectInfoInternalServerError Internal error

swagger:response getObjectInfoInternalServerError
*/
type GetObjectInfoInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetObjectInfoInternalServerError creates GetObjectInfoInternalServerError with default headers values
func NewGetObjectInfoInternalServerError() *GetObjectInfoInternalServerError {

	return &GetObjectInfoInternalServerError{}
}

// WithPayload adds the payload to the get object info internal server error response
func (o *GetObjectInfoInternalServerError) WithPayload(payload *models.APIResponse) *GetObjectInfoInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get object info internal server error response
func (o *GetObjectInfoInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetObjectInfoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
